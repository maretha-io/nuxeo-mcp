name: Docker Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  docker-integration-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests fastmcp
        
    - name: Login to Nuxeo Docker Registry
      uses: docker/login-action@v2
      with:
        registry: docker-private.packages.nuxeo.com
        username: ${{ secrets.NUXEO_DOCKER_USERNAME }}
        password: ${{ secrets.NUXEO_DOCKER_PASSWORD }}
        
    - name: Start services with Docker Compose
      run: |
        docker compose up -d
        
    - name: Wait for Nuxeo to start
      run: |
        echo "Waiting for Nuxeo to start..."
        timeout=300
        start_time=$(date +%s)
        while ! curl -s http://localhost:8080/nuxeo/runningstatus > /dev/null; do
          current_time=$(date +%s)
          elapsed=$((current_time - start_time))
          if [ $elapsed -gt $timeout ]; then
            echo "Timeout waiting for Nuxeo to start"
            exit 1
          fi
          echo "Waiting for Nuxeo to start... ($elapsed seconds)"
          sleep 5
        done
        echo "Nuxeo is running"
        
    - name: Initialize Nuxeo repository
      run: |
        python seed_nuxeo.py --url http://localhost:8080/nuxeo --username Administrator --password Administrator
        
    - name: Wait for MCP Server to start
      run: |
        echo "Waiting for MCP Server to start..."
        timeout=60
        start_time=$(date +%s)
        while ! curl -s http://localhost:8081/mcp/health > /dev/null; do
          current_time=$(date +%s)
          elapsed=$((current_time - start_time))
          if [ $elapsed -gt $timeout ]; then
            echo "Timeout waiting for MCP Server to start"
            exit 1
          fi
          echo "Waiting for MCP Server to start... ($elapsed seconds)"
          sleep 2
        done
        echo "MCP Server is running"
        
    - name: Test search tool
      run: |
        python mcp_client.py --url http://localhost:8081 search "SELECT * FROM Document WHERE ecm:primaryType = 'File'"
        
    - name: Test get-document tool
      run: |
        python mcp_client.py --url http://localhost:8081 get-document --path "/default-domain"
